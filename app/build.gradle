apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
    signingConfigs {
        config {
            storeFile file('D:\\demo\\file_update\\wifiOne\\app\\demok.jks')
            storePassword 'sinata'
            keyAlias 'demo'
            keyPassword 'demo888'
        }
    }
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.example.demok"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.config

        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }

        manifestPlaceholders = [
                JPUSH_PKGNAME : applicationId,
                JPUSH_APPKEY : "8ecae15283aafda9a8612553", //极光开发平台上注册的包名对应的appkey.
                JPUSH_CHANNEL : "developer-default", //暂时填写默认值即可.
        ]
    }

    buildTypes {
        release {
            minifyEnabled true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
        debug{
            minifyEnabled false
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            java.srcDirs += 'src/main/kotlin'
            res.srcDirs =
                    [
                            'src/main/res',
                            'src/main/res/layouts',
                            'src/main/res/layouts/login',
                            'src/main/res/layouts/home',
                            'src/main/res/layouts/other',
                            'src/main/res/layouts/mine'
                    ]
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation project(':baselib')
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.google.android.material:material:1.2.1'
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
    implementation 'com.koushikdutta.async:androidasync:2.+'
    implementation "com.hwangjr.rxbus:rxbus:1.0.5"
    //photoview
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'

    implementation 'com.github.ctiao:DanmakuFlameMaster:0.9.25'
    implementation 'com.github.ctiao:ndkbitmap-armv7a:0.9.21'
    //hilt
    implementation "com.google.dagger:hilt-android:2.29.1-alpha"
    kapt "com.google.dagger:hilt-android-compiler:2.29.1-alpha"

    implementation 'com.tencent.bugly:crashreport_upgrade:1.4.5'
    implementation 'com.tencent.bugly:nativecrashreport:3.7.500'
//    implementation 'com.tencent.tinker:tinker-android-lib:1.9.14.7'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9'

    implementation 'cn.jiguang.sdk:jpush:3.8.6'
    implementation 'cn.jiguang.sdk:jcore:2.5.5'
}